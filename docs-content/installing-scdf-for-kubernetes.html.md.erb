---
title: Installing Spring Cloud Data Flow for Kubernetes
owner: Spring Cloud Data Flow Release Engineering
---

This topic describes how to install Spring Cloud Data Flow for Kubernetes.

Before proceeding, review the [Configuring Installation Values](configuring-installation-values.html) topic to ensure that you have configured all of the required or recommended installation resources.

Before installing Spring Cloud Data Flow for Kubernetes you must create a Kubernetes Secret that allows your service account to pull images from the Tanzu Network Registry.
In the namespace where you intend to install, create a Secret as shown below.
Note to set the username and password variables based on your Tanzu Network login credentials or to the credentials for the registry where you optionally have relocated the images.

```bash
kubectl create secret \
docker-registry scdf-image-regcred \
--docker-server=registry.pivotal.io \
--docker-username=${username} \
--docker-password=${password}
```
## <a id='install-scdf-for-k8s-dev'></a> Installing Spring Cloud Data Flow for Kubernetes to the dev environment

The install script is located in `bin/install-dev.sh` automates the following steps of installing into an existing Kubernetes cluster.

* Postgresql
* RabbitMQ
* Skipper Server
* Data Flow server

To uninstall, execute the script `bin/uninstall-dev.sh`

## <a id='install-scdf-for-k8s-prod'></a> Installing Spring Cloud Data Flow for Kubernetes to the production environment

Before running the following command ensure that the database Skipper and Data Flow will be using has been provisioned and properly configured in each `application.yaml` configuration file.
```bash
$ kubectl kustomize ./apps/skipper/kustomize/overlays/prod/ | kapp deploy -y -a skipper -f -
```
and
```bash
$ kubectl kustomize ./apps/data-flow/kustomize/overlays/prod/ | kapp deploy -y -a data-flow -f -
```

Alternatively, instead of piping the output of `kubectl kustomize` to kapp you can pipe it to a file and then manage that file in a manner that fits into existing company deployment procedures for Kubernetes applications.

## <a id='install-image-relocation'></a> Image relocation

Preparing to relocate images for Spring Cloud Data Flow for Kubernetes

Download the Spring Cloud Data Flow for Kubernetes installation images from VMware Tanzu Network.

1. Log into VMware Tanzu Network.
2. Navigate to the Spring Cloud Data Flow for Kubernetes product listing.
3. Download the "SCDF for Kubernetes installation images" archive file to the same directory where you downloaded the "SCDF for Kubernetes installation files" archive file above.
4. Extract the contents of data-flow-images-0.1.0.tgz

```
$ tar xvzf data-flow-images-0.1.0.tar
```
Then cd to the extracted spring-cloud-data-flowI directory.

In the `bin` directory is a script `relocate-image.sh`.  It takes two arguments `--app` and `--repository`.
The usage is
<pre>
Usage: ./bin/relocate-image.sh [-r|--repository <arg>] [-a|--app <arg>] [-h|--help]
	-r, --repository: Import images into given image repository (no default)
	-a, --app: Application to relocate, data-flow or skipper (default: data-flow)
	-h, --help: Prints help
</pre>

To relocate the Data Flow server, use the Docker CLI to authenticate to your repository and execute

```bash
$ ./bin/relocate-image.sh --app data-flow --repository <registry-repo-prefix>/spring-cloud-dataflow-server
```

For skipper image relocation

```bash
$ ./bin/relocate-image.sh --app skipper --repository <registry-repo-prefix>/spring-cloud-skipper-server
```

Change the repository argument appropriately for your environment.

The relocation script will update the `kustomization.yaml` files to match the new relocated image names and location.
